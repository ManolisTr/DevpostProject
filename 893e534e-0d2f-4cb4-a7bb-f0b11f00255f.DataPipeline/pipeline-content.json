{
  "properties": {
    "activities": [
      {
        "name": "Copy Data Loop",
        "type": "ForEach",
        "dependsOn": [
          {
            "activity": "Get Tables",
            "dependencyConditions": [
              "Completed"
            ]
          }
        ],
        "typeProperties": {
          "items": {
            "value": "@activity('Get Tables').output.value",
            "type": "Expression"
          },
          "isSequential": false,
          "activities": [
            {
              "name": "Copy changes from source system",
              "type": "Copy",
              "dependsOn": [
                {
                  "activity": "Copy Columns",
                  "dependencyConditions": [
                    "Completed"
                  ]
                }
              ],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 3,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "source": {
                  "type": "SqlServerSource",
                  "sqlReaderQuery": {
                    "value": "@concat(json(activity('Copy Columns').output.result.exitValue)['sql_stmt'], ' WHERE ModifiedDate > ', 'CONVERT(DATETIME2, ''', item().version, ''' , 120)')",
                    "type": "Expression"
                  },
                  "queryTimeout": "02:00:00",
                  "partitionOption": "None",
                  "datasetSettings": {
                    "annotations": [],
                    "type": "SqlServerTable",
                    "schema": [],
                    "typeProperties": {
                      "database": "AdventureWorks"
                    },
                    "externalReferences": {
                      "connection": "b315030a-0c28-495a-92d7-a6c0c1cabdf7"
                    }
                  }
                },
                "sink": {
                  "type": "ParquetSink",
                  "storeSettings": {
                    "type": "LakehouseWriteSettings",
                    "copyBehavior": "PreserveHierarchy"
                  },
                  "formatSettings": {
                    "type": "ParquetWriteSettings",
                    "enableVertiParquet": true
                  },
                  "datasetSettings": {
                    "annotations": [],
                    "linkedService": {
                      "name": "DEV_Ingestion_DP_Lakehouse",
                      "properties": {
                        "annotations": [],
                        "type": "Lakehouse",
                        "typeProperties": {
                          "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb",
                          "artifactId": "04428fdd-b859-4bbe-b9a3-9d1eff092896",
                          "rootFolder": "Files"
                        }
                      }
                    },
                    "type": "Parquet",
                    "typeProperties": {
                      "location": {
                        "type": "LakehouseLocation",
                        "fileName": {
                          "value": "@concat('execution_date=', formatDateTime(utcNow(), 'yyyy-MM-dd'))",
                          "type": "Expression"
                        },
                        "folderPath": {
                          "value": "@concat('incremental/AdventureWorks/filename=', item().destination_table)",
                          "type": "Expression"
                        }
                      },
                      "compressionCodec": "snappy"
                    },
                    "schema": []
                  }
                },
                "enableStaging": false,
                "translator": {
                  "type": "TabularTranslator",
                  "typeConversion": true,
                  "typeConversionSettings": {
                    "allowDataTruncation": true,
                    "treatBooleanAsNumber": false
                  }
                }
              }
            },
            {
              "name": "Copy Columns",
              "type": "TridentNotebook",
              "dependsOn": [
                {
                  "activity": "Insert row into log file",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "notebookId": "0602e779-bd83-4057-8cd5-ae917061c46b",
                "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb",
                "parameters": {
                  "table_name": {
                    "value": {
                      "value": "@item().table_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "schema_name": {
                    "value": {
                      "value": "@item().schema_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "Insert row into log file",
              "type": "TridentNotebook",
              "dependsOn": [],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "notebookId": "a1ef9433-eb62-4734-8fe1-751a45647acd",
                "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb",
                "parameters": {
                  "table_name": {
                    "value": {
                      "value": "@item().table_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "schema_name": {
                    "value": {
                      "value": "@item().schema_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "task": {
                    "value": "Copy Columns",
                    "type": "string"
                  },
                  "status": {
                    "value": "Running",
                    "type": "string"
                  },
                  "log_id": {
                    "value": {
                      "value": "@item().log_id",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "pipeline": {
                    "value": {
                      "value": "@pipeline().parameters.pipeline",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "filepath": {
                    "value": {
                      "value": "@pipeline().parameters.filepath",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "filename": {
                    "value": {
                      "value": "@pipeline().parameters.filename",
                      "type": "Expression"
                    },
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "Log Transfer to LH",
              "type": "TridentNotebook",
              "dependsOn": [
                {
                  "activity": "Reconciliation Checks",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "notebookId": "a1ef9433-eb62-4734-8fe1-751a45647acd",
                "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb",
                "parameters": {
                  "status": {
                    "value": {
                      "value": "@activity('Reconciliation Checks').output.result.exitValue",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "table_name": {
                    "value": {
                      "value": "@item().table_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "schema_name": {
                    "value": {
                      "value": "@item().schema_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "database": {
                    "value": "Ingestion_LH",
                    "type": "string"
                  },
                  "task": {
                    "value": {
                      "value": "@pipeline().parameters.task_transfer_to_LH",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "log_id": {
                    "value": {
                      "value": "@item().log_id",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "pipeline": {
                    "value": {
                      "value": "@pipeline().parameters.pipeline",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "filepath": {
                    "value": {
                      "value": "@pipeline().parameters.filepath",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "filename": {
                    "value": {
                      "value": "@pipeline().parameters.filename",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "reconciliation_status": {
                    "value": {
                      "value": "@activity('Reconciliation Checks').output.result.exitValue",
                      "type": "Expression"
                    },
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "Delta Loading Statements",
              "type": "TridentNotebook",
              "dependsOn": [
                {
                  "activity": "Copy changes from source system",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "notebookId": "e5858bff-e750-4f35-9b13-726c9cdeef9d",
                "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb",
                "parameters": {
                  "schema_name": {
                    "value": {
                      "value": "@item().schema_name\r\n",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "table_name": {
                    "value": {
                      "value": "@item().table_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "select_stm": {
                    "value": {
                      "value": "@json(activity('Copy Columns').output.result.exitValue)['sql_stmt']",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "LH": {
                    "value": "DEV_Ingestion_DP_Lakehouse",
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "Reconciliation Checks",
              "type": "TridentNotebook",
              "dependsOn": [
                {
                  "activity": "Delta Loading Statements",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                },
                {
                  "activity": "Log Copy Data",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "notebookId": "45df444b-41c2-498a-89ab-a5c5756d208e",
                "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb",
                "parameters": {
                  "source_schema": {
                    "value": {
                      "value": "@item().schema_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "source_table": {
                    "value": {
                      "value": "@item().table_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "destination_table": {
                    "value": {
                      "value": "@item().destination_table",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "suffix": {
                    "value": {
                      "value": "@pipeline().parameters.suffix",
                      "type": "Expression"
                    },
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "Log Copy Data",
              "type": "TridentNotebook",
              "dependsOn": [
                {
                  "activity": "Copy changes from source system",
                  "dependencyConditions": [
                    "Completed"
                  ]
                }
              ],
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "notebookId": "a1ef9433-eb62-4734-8fe1-751a45647acd",
                "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb",
                "parameters": {
                  "status": {
                    "value": {
                      "value": "@activity('Copy changes from source system').output.executionDetails[0].status",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "table_name": {
                    "value": {
                      "value": "@item().table_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "schema_name": {
                    "value": {
                      "value": "@item().schema_name",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "task": {
                    "value": {
                      "value": "@pipeline().parameters.task_copy_to_LH",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "log_id": {
                    "value": {
                      "value": "@item().log_id",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "pipeline": {
                    "value": {
                      "value": "@pipeline().parameters.pipeline",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "filename": {
                    "value": {
                      "value": "@pipeline().parameters.filename",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "filepath": {
                    "value": {
                      "value": "@pipeline().parameters.filepath",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "rows_cnt": {
                    "value": {
                      "value": "@if(empty(activity('Copy changes from source system').output.errors), activity('Copy changes from source system').output.rowsCopied, -100)",
                      "type": "Expression"
                    },
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "name": "Initialize log file",
        "type": "TridentNotebook",
        "dependsOn": [],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "notebookId": "954fcc1d-ef89-40d5-b220-d782081984ca",
          "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb",
          "parameters": {
            "filepath": {
              "value": "abfss://Ingestion_DP_DEV_workspace@onelake.dfs.fabric.microsoft.com/DEV_Ingestion_DP_Lakehouse.Lakehouse/Files/",
              "type": "string"
            },
            "filename": {
              "value": "tmp_ctrl_log_delta",
              "type": "string"
            }
          }
        }
      },
      {
        "name": "Get Tables",
        "description": "",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Initialize log file",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 3,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "source": {
            "type": "DataWarehouseSource",
            "sqlReaderQuery": "SELECT \n  cast(NEWID() as NVARCHAR(100)) AS log_id\n  , lower(SOURCE_SCHEMA) as schema_name\n  , lower(SOURCE_TABLE) as table_name\n  , 'aw_' + DESTINATION_TABLE as stg_table\n  , DESTINATION_TABLE as destination_table\n  , VERSION as VERSION\n  , LH_NAME AS LH_name\n  , 'dbo'  AS LH_schema\nFROM \n    [DEV_Ingestion_DP_Lakehouse].[dbo].[fabric_metadata]\nwhere ACTIVE = 1 \n  AND LOADING_METHOD = 'Delta';",
            "queryTimeout": "02:00:00",
            "partitionOption": "None"
          },
          "firstRowOnly": false,
          "datasetSettings": {
            "annotations": [],
            "linkedService": {
              "name": "DW_DEV",
              "properties": {
                "annotations": [],
                "type": "DataWarehouse",
                "typeProperties": {
                  "endpoint": "fgm6cdfxlexujcq5ohbjdqfdce-udckoy2gpyyudnpobmz5nhss5m.datawarehouse.fabric.microsoft.com",
                  "artifactId": "5d8bbdb3-60f1-4115-b697-bb21134b8787",
                  "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb"
                }
              }
            },
            "type": "DataWarehouseTable",
            "schema": [],
            "typeProperties": {}
          }
        }
      },
      {
        "name": "Aggregate stats",
        "type": "TridentNotebook",
        "dependsOn": [
          {
            "activity": "Copy Data Loop",
            "dependencyConditions": [
              "Completed"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "notebookId": "dc64abf3-3d08-4008-be33-2344ba90bbfc",
          "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb",
          "parameters": {
            "suffix": {
              "value": {
                "value": "@pipeline().parameters.suffix",
                "type": "Expression"
              },
              "type": "string"
            }
          }
        }
      },
      {
        "name": "Update Fabric Metadata",
        "type": "TridentNotebook",
        "dependsOn": [
          {
            "activity": "Aggregate stats",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureOutput": false,
          "secureInput": false
        },
        "typeProperties": {
          "notebookId": "45c20011-b6bf-4f2b-87bd-1161327960a4",
          "workspaceId": "63a7c4a0-7e46-4131-b5ee-0b33d69e52eb"
        }
      }
    ],
    "parameters": {
      "pipeline": {
        "type": "string",
        "defaultValue": "Delta Load"
      },
      "filename": {
        "type": "string",
        "defaultValue": "tmp_ctrl_log_delta"
      },
      "filepath": {
        "type": "string",
        "defaultValue": "abfss://Ingestion_DP_DEV_workspace@onelake.dfs.fabric.microsoft.com/DEV_Ingestion_DP_Lakehouse.Lakehouse/Files/"
      },
      "suffix": {
        "type": "string",
        "defaultValue": "_delta"
      },
      "task_copy_to_LH": {
        "type": "string",
        "defaultValue": "Copy Data to staging table of Lakehouse"
      },
      "task_transfer_to_LH": {
        "type": "string",
        "defaultValue": "Transfer to LH"
      }
    },
    "variables": {
      "schema_name": {
        "type": "String"
      },
      "table_name": {
        "type": "String"
      },
      "select_stm": {
        "type": "String"
      },
      "stg_table": {
        "type": "String"
      },
      "destination_table": {
        "type": "String"
      },
      "version": {
        "type": "String"
      },
      "LH_name": {
        "type": "String"
      },
      "LH_schema": {
        "type": "String"
      },
      "filepath": {
        "type": "String"
      },
      "filename": {
        "type": "String"
      },
      "suffix": {
        "type": "String"
      },
      "ins_stm": {
        "type": "String"
      },
      "upd_stm": {
        "type": "String"
      }
    }
  }
}